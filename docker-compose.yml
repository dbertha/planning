services:
  ecole_app:
    build: .
    container_name: ecole_app
    ports:
      - "3000:3000"
      - "5173:5173"
    environment:
      - NODE_ENV=production
      - PORT=3000
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./backups:/app/backups
      - static_files:/app/dist
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - ecole_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Commande pour s'assurer que les fichiers statiques sont copiés au démarrage
    command: >
      sh -c "
        echo 'Copie des fichiers statiques vers le volume partagé...' &&
        cp -r /app/dist/. /usr/share/nginx/html/ 2>/dev/null || echo 'Volume nginx pas encore disponible' &&
        echo 'Démarrage du serveur...' &&
        node prod-server.js
      "

  postgres:
    image: postgres:15-alpine
    container_name: ecole_postgres
    environment:
      POSTGRES_DB: planning
      POSTGRES_USER: ecole
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - ecole_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ecole -d planning"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    container_name: ecole_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
      - static_files:/usr/share/nginx/html:ro
    depends_on:
      - ecole_app
    restart: unless-stopped
    networks:
      - ecole_network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    container_name: ecole_certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on:
      - nginx
    networks:
      - ecole_network

volumes:
  postgres_data:
  static_files:

networks:
  ecole_network:
    driver: bridge
